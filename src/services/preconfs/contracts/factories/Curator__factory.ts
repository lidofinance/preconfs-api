/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { Curator, CuratorInterface } from '../Curator';

const _abi = [
  {
    type: 'constructor',
    inputs: [
      {
        name: '_stakingRouterAddress',
        type: 'address',
        internalType: 'address',
      },
      {
        name: '_managerAddress',
        type: 'address',
        internalType: 'address',
      },
    ],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'DEFAULT_MAX_VALIDATORS',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'getOperator',
    inputs: [
      {
        name: 'rewardAddress',
        type: 'address',
        internalType: 'address',
      },
    ],
    outputs: [
      {
        name: 'isActive',
        type: 'bool',
        internalType: 'bool',
      },
      {
        name: 'optInAddress',
        type: 'address',
        internalType: 'address',
      },
      {
        name: 'rpcURL',
        type: 'string',
        internalType: 'string',
      },
      {
        name: 'moduleId',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'operatorId',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'keysRangeStart',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'keysRangeEnd',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'managerAddress',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'address',
        internalType: 'address',
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'maxValidatorsForModule',
    inputs: [
      {
        name: '',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'operators',
    inputs: [
      {
        name: '',
        type: 'address',
        internalType: 'address',
      },
    ],
    outputs: [
      {
        name: 'isActive',
        type: 'bool',
        internalType: 'bool',
      },
      {
        name: 'optInAddress',
        type: 'address',
        internalType: 'address',
      },
      {
        name: 'rpcURL',
        type: 'string',
        internalType: 'string',
      },
      {
        name: 'moduleId',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'operatorId',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'keysRangeStart',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'keysRangeEnd',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'optIn',
    inputs: [
      {
        name: 'optInAddress',
        type: 'address',
        internalType: 'address',
      },
      {
        name: 'rpcURL',
        type: 'string',
        internalType: 'string',
      },
      {
        name: 'moduleId',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'operatorId',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'keysRangeStart',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'keysRangeEnd',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'optOut',
    inputs: [
      {
        name: 'moduleId',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'operatorId',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'setMaxValidatorsForStakingModule',
    inputs: [
      {
        name: 'moduleId',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'maxValidators',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'stakingRouterAddress',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'address',
        internalType: 'address',
      },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'updateKeysRange',
    inputs: [
      {
        name: 'moduleId',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'operatorId',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'newKeysRangeStart',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'newKeysRangeEnd',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'event',
    name: 'OptInSucceeded',
    inputs: [
      {
        name: 'rewardAddress',
        type: 'address',
        indexed: false,
        internalType: 'address',
      },
      {
        name: 'optInAddress',
        type: 'address',
        indexed: false,
        internalType: 'address',
      },
      {
        name: 'rpcURL',
        type: 'string',
        indexed: false,
        internalType: 'string',
      },
      {
        name: 'moduleId',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
      {
        name: 'operatorId',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
      {
        name: 'keysRangeStart',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
      {
        name: 'keysRangeEnd',
        type: 'uint256',
        indexed: false,
        internalType: 'uint256',
      },
    ],
    anonymous: false,
  },
  {
    type: 'error',
    name: 'KeysIndexMismatch',
    inputs: [
      {
        name: 'moduleId',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'operatorId',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'keysRangeStart',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'keysRangeEnd',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'totalExitedValidators',
        type: 'uint64',
        internalType: 'uint64',
      },
      {
        name: 'totalAddedValidators',
        type: 'uint64',
        internalType: 'uint64',
      },
    ],
  },
  {
    type: 'error',
    name: 'ModuleIdCheckFailed',
    inputs: [
      {
        name: 'moduleId',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'totalModulesCount',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
  },
  {
    type: 'error',
    name: 'OperatorAlreadyRegistered',
    inputs: [
      {
        name: 'moduleId',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'operatorId',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
  },
  {
    type: 'error',
    name: 'OperatorIdCheckFailed',
    inputs: [
      {
        name: 'moduleId',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'operatorId',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'totalOperatorsCount',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
  },
  {
    type: 'error',
    name: 'OperatorNotActive',
    inputs: [
      {
        name: 'moduleId',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'operatorId',
        type: 'uint256',
        internalType: 'uint256',
      },
    ],
  },
  {
    type: 'error',
    name: 'OperatorNotRegistered',
    inputs: [
      {
        name: 'moduleId',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'operatorId',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'operatorRewardAddress',
        type: 'address',
        internalType: 'address',
      },
    ],
  },
  {
    type: 'error',
    name: 'RewardAddressMismatch',
    inputs: [
      {
        name: 'sender',
        type: 'address',
        internalType: 'address',
      },
      {
        name: 'operatorId',
        type: 'uint256',
        internalType: 'uint256',
      },
      {
        name: 'operatorRewardAddress',
        type: 'address',
        internalType: 'address',
      },
    ],
  },
] as const;

const _bytecode =
  '0x60c060405234801561000f575f80fd5b506040516115df3803806115df83398101604081905261002e91610060565b6001600160a01b039182166080521660a052610091565b80516001600160a01b038116811461005b575f80fd5b919050565b5f8060408385031215610071575f80fd5b61007a83610045565b915061008860208401610045565b90509250929050565b60805160a05161150a6100d55f395f81816101a901528181610894015261096e01525f8181610157015281816101cd0152818161042b01526107c2015261150a5ff3fe608060405234801561000f575f80fd5b506004361061009b575f3560e01c8063657eda4311610063578063657eda431461011c5780637a0d26c614610133578063a011037014610152578063bf91e4c114610191578063cf73a1bc146101a4575f80fd5b80630b20554f1461009f5780630c2846b7146100b457806313e7c9d8146100c75780635865c60c146100f657806361e1cad414610109575b5f80fd5b6100b26100ad366004610ed7565b6101cb565b005b6100b26100c2366004610f85565b610429565b6100da6100d5366004610fb4565b6105a9565b6040516100ed9796959493929190611023565b60405180910390f35b6100da610104366004610fb4565b610677565b6100b2610117366004611074565b6107c0565b6101256103e881565b6040519081526020016100ed565b610125610141366004611094565b60016020525f908152604090205481565b6101797f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100ed565b6100b261019f366004611074565b610963565b6101797f000000000000000000000000000000000000000000000000000000000000000081565b7f00000000000000000000000000000000000000000000000000000000000000006101f68186610a7c565b604051630bc1bb1960e41b8152600481018690525f906001600160a01b0383169063bc1bb190906024015f60405180830381865afa15801561023a573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610261919081019061114f565b60200151905080610273818888610b1a565b5f6102818289898989610bb5565b905061028e888787610cf0565b336001600160a01b038216146102d4576040516305e776d560e41b8152336004820152602481018890526001600160a01b03821660448201526064015b60405180910390fd5b6001600160a01b0381165f9081526020819052604090205460ff161561031757604051630e3d618160e11b815260048101899052602481018890526044016102cb565b6040805160e08101825260018082526001600160a01b038d811660208085019182528486018f8152606086018f9052608086018e905260a086018d905260c086018c90528784165f908152918290529590208451815492516001600160a81b0319909316901515610100600160a81b0319161761010092909316919091029190911781559251919291908201906103ae90826112ff565b50606082015181600201556080820151816003015560a0820151816004015560c082015181600501559050507f762c336e491959ae0c0366b49247458d25108107c8edecbd1e706c3b8fc09835818b8b8b8b8b8b60405161041597969594939291906113bf565b60405180910390a150505050505050505050565b7f00000000000000000000000000000000000000000000000000000000000000006104548186610a7c565b604051630bc1bb1960e41b8152600481018690525f906001600160a01b0383169063bc1bb190906024015f60405180830381865afa158015610498573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526104bf919081019061114f565b602001519050806104d1818888610b1a565b6104dc878686610cf0565b5f6104ea8289898989610bb5565b9050336001600160a01b0382161461052d576040516305e776d560e41b8152336004820152602481018890526001600160a01b03821660448201526064016102cb565b6001600160a01b0381165f9081526020819052604090205460ff1661057e57604051630242282160e51b815260048101899052602481018890526001600160a01b03821660448201526064016102cb565b6001600160a01b03165f90815260208190526040902060048101959095555050506005909101555050565b5f602081905290815260409020805460018201805460ff8316936101009093046001600160a01b03169291906105de90611283565b80601f016020809104026020016040519081016040528092919081815260200182805461060a90611283565b80156106555780601f1061062c57610100808354040283529160200191610655565b820191905f5260205f20905b81548152906001019060200180831161063857829003601f168201915b5050505050908060020154908060030154908060040154908060050154905087565b6001600160a01b038082165f90815260208181526040808320815160e081018352815460ff81161515825261010090049095169285019290925260018201805493948594606094869485948594859485949193919291840191906106da90611283565b80601f016020809104026020016040519081016040528092919081815260200182805461070690611283565b80156107515780601f1061072857610100808354040283529160200191610751565b820191905f5260205f20905b81548152906001019060200180831161073457829003601f168201915b505050505081526020016002820154815260200160038201548152602001600482015481526020016005820154815250509050805f015181602001518260400151836060015184608001518560a001518660c00151975097509750975097509750975050919395979092949650565b7f00000000000000000000000000000000000000000000000000000000000000006107eb8184610a7c565b604051630bc1bb1960e41b8152600481018490525f906001600160a01b0383169063bc1bb190906024015f60405180830381865afa15801561082f573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610856919081019061114f565b60200151905080610868818686610b1a565b5f6108738286610d99565b9050336001600160a01b038216148015906108b75750336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614155b156108ed576040516305e776d560e41b8152336004820152602481018690526001600160a01b03821660448201526064016102cb565b6001600160a01b0381165f9081526020819052604090205460ff1661093e57604051630242282160e51b815260048101879052602481018690526001600160a01b03821660448201526064016102cb565b6001600160a01b03165f908152602081905260409020805460ff191690555050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109cb5760405162461bcd60e51b815260206004820152600d60248201526c2737ba103a34329037bbb732b960991b60448201526064016102cb565b5f8211610a0e5760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081b5bd91d5b19481251607a1b60448201526064016102cb565b5f8111610a6b5760405162461bcd60e51b815260206004820152602560248201527f4d61782076616c696461746f7273206d75737420626520677265617465722074604482015264068616e20360dc1b60648201526084016102cb565b5f9182526001602052604090912055565b5f826001600160a01b0316634a7583b66040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ab9573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610add91906113ea565b90506001821080610aed57508082115b15610b1557604051630af5216f60e01b815260048101839052602481018290526044016102cb565b505050565b5f836001600160a01b031663a70c70e46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b57573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b7b91906113ea565b905080821115610baf5760405163127195b760e01b81526004810184905260248101839052604481018290526064016102cb565b50505050565b604051632695a60f60e21b815260048101849052600160248201525f908190819081908190819081906001600160a01b038d1690639a56983c906044015f60405180830381865afa158015610c0c573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610c339190810190611401565b95509550955095509550955085610c675760405163ddbcd51960e01b8152600481018c9052602481018b90526044016102cb565b888267ffffffffffffffff161180610c885750878167ffffffffffffffff16105b80610c9257508888105b15610ce057604051631824911960e01b8152600481018c9052602481018b9052604481018a90526064810189905267ffffffffffffffff8084166084830152821660a482015260c4016102cb565b50919a9950505050505050505050565b5f610cfb83836114a8565b610d069060016114c1565b5f858152600160205260408120549192509015610d30575f85815260016020526040902054610d34565b6103e85b905080821115610d925760405162461bcd60e51b815260206004820152602360248201527f56616c696461746f72206c696d697420657863656564656420666f72206d6f64604482015262756c6560e81b60648201526084016102cb565b5050505050565b604051632695a60f60e21b815260048101829052600160248201525f908190819081908190819081906001600160a01b038a1690639a56983c906044015f60405180830381865afa158015610df0573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610e179190810190611401565b50919d9c50505050505050505050505050565b6001600160a01b0381168114610e3e575f80fd5b50565b634e487b7160e01b5f52604160045260245ffd5b6040516101a0810167ffffffffffffffff81118282101715610e7957610e79610e41565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610ea857610ea8610e41565b604052919050565b5f67ffffffffffffffff821115610ec957610ec9610e41565b50601f01601f191660200190565b5f805f805f8060c08789031215610eec575f80fd5b8635610ef781610e2a565b9550602087013567ffffffffffffffff811115610f12575f80fd5b8701601f81018913610f22575f80fd5b8035610f35610f3082610eb0565b610e7f565b8181528a6020838501011115610f49575f80fd5b816020840160208301375f9181016020019190915296999698505050506040850135946060810135946080820135945060a09091013592509050565b5f805f8060808587031215610f98575f80fd5b5050823594602084013594506040840135936060013592509050565b5f60208284031215610fc4575f80fd5b8135610fcf81610e2a565b9392505050565b5f5b83811015610ff0578181015183820152602001610fd8565b50505f910152565b5f815180845261100f816020860160208601610fd6565b601f01601f19169290920160200192915050565b87151581526001600160a01b038716602082015260e0604082018190525f9061104e90830188610ff8565b90508560608301528460808301528360a08301528260c083015298975050505050505050565b5f8060408385031215611085575f80fd5b50508035926020909101359150565b5f602082840312156110a4575f80fd5b5035919050565b805162ffffff811681146110bd575f80fd5b919050565b80516110bd81610e2a565b805161ffff811681146110bd575f80fd5b805160ff811681146110bd575f80fd5b5f82601f8301126110fd575f80fd5b815161110b610f3082610eb0565b81815284602083860101111561111f575f80fd5b611130826020830160208701610fd6565b949350505050565b805167ffffffffffffffff811681146110bd575f80fd5b5f6020828403121561115f575f80fd5b815167ffffffffffffffff80821115611176575f80fd5b908301906101a0828603121561118a575f80fd5b611192610e55565b61119b836110ab565b81526111a9602084016110c2565b60208201526111ba604084016110cd565b60408201526111cb606084016110cd565b60608201526111dc608084016110cd565b60808201526111ed60a084016110de565b60a082015260c083015182811115611203575f80fd5b61120f878286016110ee565b60c08301525061122160e08401611138565b60e082015261010083810151908201526101208084015190820152610140915061124c8284016110cd565b828201526101609150611260828401611138565b828201526101809150611274828401611138565b91810191909152949350505050565b600181811c9082168061129757607f821691505b6020821081036112b557634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115610b1557805f5260205f20601f840160051c810160208510156112e05750805b601f840160051c820191505b81811015610d92575f81556001016112ec565b815167ffffffffffffffff81111561131957611319610e41565b61132d816113278454611283565b846112bb565b602080601f831160018114611360575f84156113495750858301515b5f19600386901b1c1916600185901b1785556113b7565b5f85815260208120601f198616915b8281101561138e5788860151825594840194600190910190840161136f565b50858210156113ab57878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b6001600160a01b0388811682528716602082015260e0604082018190525f9061104e90830188610ff8565b5f602082840312156113fa575f80fd5b5051919050565b5f805f805f8060c08789031215611416575f80fd5b86518015158114611425575f80fd5b602088015190965067ffffffffffffffff811115611441575f80fd5b61144d89828a016110ee565b955050604087015161145e81610e2a565b935061146c60608801611138565b925061147a60808801611138565b915061148860a08801611138565b90509295509295509295565b634e487b7160e01b5f52601160045260245ffd5b818103818111156114bb576114bb611494565b92915050565b808201808211156114bb576114bb61149456fea2646970667358221220e58fa153ace3b71268de8d427fbd5fdea7b65133b664b3ae098e90c2764b0c4964736f6c63430008180033';

type CuratorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CuratorConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Curator__factory extends ContractFactory {
  constructor(...args: CuratorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _stakingRouterAddress: string,
    _managerAddress: string,
    overrides?: Overrides & { from?: string },
  ): Promise<Curator> {
    return super.deploy(
      _stakingRouterAddress,
      _managerAddress,
      overrides || {},
    ) as Promise<Curator>;
  }
  override getDeployTransaction(
    _stakingRouterAddress: string,
    _managerAddress: string,
    overrides?: Overrides & { from?: string },
  ): TransactionRequest {
    return super.getDeployTransaction(
      _stakingRouterAddress,
      _managerAddress,
      overrides || {},
    );
  }
  override attach(address: string): Curator {
    return super.attach(address) as Curator;
  }
  override connect(signer: Signer): Curator__factory {
    return super.connect(signer) as Curator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CuratorInterface {
    return new utils.Interface(_abi) as CuratorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): Curator {
    return new Contract(address, _abi, signerOrProvider) as Curator;
  }
}
